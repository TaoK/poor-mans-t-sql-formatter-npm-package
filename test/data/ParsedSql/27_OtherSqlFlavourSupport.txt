<SqlRoot><SqlStatement><SingleLineComment>DB2 and SQLite both support a double-pipe string concatenation operator that 
</SingleLineComment><SingleLineComment> could never exist in T-SQL, so parsing as an operator makes the formatter
</SingleLineComment><SingleLineComment> more versatile without affecting core T-SQL support:
</SingleLineComment><WhiteSpace>
</WhiteSpace><Clause><OtherKeyword>SELECT</OtherKeyword><WhiteSpace> </WhiteSpace><String>One String</String><OtherOperator>||</OtherOperator><String>another string</String><WhiteSpace>

</WhiteSpace></Clause></SqlStatement><SqlStatement><SingleLineComment>Similar SQLite operators: bit shifts and c-style equality operator
</SingleLineComment><WhiteSpace>
</WhiteSpace><Clause><OtherKeyword>SELECT</OtherKeyword><WhiteSpace> </WhiteSpace><NumberValue>101</NumberValue><WhiteSpace> </WhiteSpace><OtherOperator>&lt;&lt;</OtherOperator><WhiteSpace> </WhiteSpace><NumberValue>1</NumberValue><Comma>,</Comma><WhiteSpace> </WhiteSpace><NumberValue>101</NumberValue><WhiteSpace> </WhiteSpace><OtherOperator>&gt;&gt;</OtherOperator><WhiteSpace> </WhiteSpace><NumberValue>1</NumberValue><WhiteSpace>
</WhiteSpace></Clause><Clause><OtherKeyword>WHERE</OtherKeyword><WhiteSpace> </WhiteSpace><NumberValue>1</NumberValue><WhiteSpace> </WhiteSpace><EqualsSign>==</EqualsSign><WhiteSpace> </WhiteSpace><NumberValue>1</NumberValue><WhiteSpace>

</WhiteSpace></Clause></SqlStatement><SqlStatement><SingleLineComment>NexusDB C-Style single-line comment
</SingleLineComment><WhiteSpace>
</WhiteSpace><SingleLineCommentCStyle> Another (not valid T-SQL) comment
</SingleLineCommentCStyle><WhiteSpace>
</WhiteSpace><SingleLineComment>NexusDB Parameters / DB2 or PostgreSQL Host Variables
</SingleLineComment><WhiteSpace>
</WhiteSpace><Clause><OtherKeyword>SELECT</OtherKeyword><WhiteSpace> </WhiteSpace><Other>:MagicValue</Other><WhiteSpace>
</WhiteSpace></Clause></SqlStatement></SqlRoot>